local Lighting = game:GetService("Lighting")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local lastUpdate = 0
local updateInterval = 0.1
local enabled = false

local Themes = {
   Default = {
       SunraysIntensity = 0.04,
       BloomIntensity = 0.5,
       Brightness = 2,
       Ambient = Color3.fromRGB(70, 70, 70),
       AtmosphereColor = Color3.fromRGB(199, 199, 199)
   },
   Night = {
       SunraysIntensity = 0.02,
       BloomIntensity = 0.8,
       Brightness = 0.5,
       Ambient = Color3.fromRGB(20, 20, 30),
       AtmosphereColor = Color3.fromRGB(40, 40, 60)
   },
   Sunset = {
       SunraysIntensity = 0.06,
       BloomIntensity = 0.7,
       Brightness = 1.5,
       Ambient = Color3.fromRGB(255, 150, 100),
       AtmosphereColor = Color3.fromRGB(255, 180, 140)
   },
   Winter = {
       SunraysIntensity = 0.03,
       BloomIntensity = 0.4,
       Brightness = 2.5,
       Ambient = Color3.fromRGB(200, 220, 255),
       AtmosphereColor = Color3.fromRGB(220, 230, 255)
   }
}

local WelcomeGui = Instance.new("ScreenGui")
WelcomeGui.Name = "WelcomeRTX"
local WelcomeFrame = Instance.new("Frame")
WelcomeFrame.Size = UDim2.new(0, 400, 0, 200)
WelcomeFrame.Position = UDim2.new(0.5, -200, 0.4, -100)
WelcomeFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
WelcomeFrame.Parent = WelcomeGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = WelcomeFrame

local WelcomeTitle = Instance.new("TextLabel")
WelcomeTitle.Text = "RTX Shaders"
WelcomeTitle.Size = UDim2.new(1, 0, 0.3, 0)
WelcomeTitle.BackgroundTransparency = 1
WelcomeTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
WelcomeTitle.TextSize = 36
WelcomeTitle.Font = Enum.Font.GothamBold
WelcomeTitle.Parent = WelcomeFrame

local MainGui = Instance.new("ScreenGui")
MainGui.Name = "RTXShaders"
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 200, 0, 300)
MainFrame.Position = UDim2.new(0.85, 0, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
MainFrame.Parent = MainGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 10)
MainCorner.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Text = "RTX Settings"
Title.Size = UDim2.new(1, 0, 0.1, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 20
Title.Font = Enum.Font.GothamBold
Title.Parent = MainFrame

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.8, 0, 0.15, 0)
ToggleButton.Position = UDim2.new(0.1, 0, 0.15, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(40, 120, 200)
ToggleButton.Text = "Enable RTX"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Parent = MainFrame

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 8)
ToggleCorner.Parent = ToggleButton

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0.1, 0, 0.1, 0)
MinimizeButton.Position = UDim2.new(0.9, 0, 0, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40)
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Parent = MainFrame

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 5)
MinCorner.Parent = MinimizeButton

local FloatingButton = Instance.new("TextButton")
FloatingButton.Size = UDim2.new(0, 50, 0, 50)
FloatingButton.Position = UDim2.new(0.9, 0, 0.5, 0)
FloatingButton.BackgroundColor3 = Color3.fromRGB(40, 120, 200)
FloatingButton.Text = "RTX"
FloatingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FloatingButton.Font = Enum.Font.GothamBold
FloatingButton.Visible = false
FloatingButton.Parent = MainGui

local FloatCorner = Instance.new("UICorner")
FloatCorner.CornerRadius = UDim.new(0, 25)
FloatCorner.Parent = FloatingButton

local themeOffset = 0.35
for theme, _ in pairs(Themes) do
   local ThemeButton = Instance.new("TextButton")
   ThemeButton.Size = UDim2.new(0.8, 0, 0.12, 0)
   ThemeButton.Position = UDim2.new(0.1, 0, themeOffset, 0)
   ThemeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
   ThemeButton.Text = theme
   ThemeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
   ThemeButton.Font = Enum.Font.GothamBold
   ThemeButton.Parent = MainFrame
   
   local ThemeCorner = Instance.new("UICorner")
   ThemeCorner.CornerRadius = UDim.new(0, 8)
   ThemeCorner.Parent = ThemeButton
   
   themeOffset = themeOffset + 0.15
   
   ThemeButton.MouseButton1Click:Connect(function()
       if enabled then
           applyTheme(theme)
       end
   end)
end

local function createEffects()
   local effects = {
       SunRays = Instance.new("SunRaysEffect"),
       Bloom = Instance.new("BloomEffect"),
       ColorCorrection = Instance.new("ColorCorrectionEffect"),
       Atmosphere = Instance.new("Atmosphere")
   }
   
   effects.Bloom.Intensity = 0.5
   effects.Bloom.Size = 24
   effects.Bloom.Threshold = 2
   
   effects.ColorCorrection.Brightness = 0.1
   effects.ColorCorrection.Contrast = 0.2
   effects.ColorCorrection.Saturation = 0.2
   effects.ColorCorrection.TintColor = Color3.fromRGB(255, 250, 250)
   
   effects.Atmosphere.Density = 0.35
   effects.Atmosphere.Offset = 0.25
   effects.Atmosphere.Color = Color3.fromRGB(199, 199, 199)
   effects.Atmosphere.Decay = Color3.fromRGB(106, 112, 125)
   effects.Atmosphere.Glare = 0.4
   effects.Atmosphere.Haze = 2
   
   for _, effect in pairs(effects) do
       effect.Parent = Lighting
   end
   
   return effects
end

local effects = createEffects()

local function EnableDragging(frame)
   local dragToggle, dragInput, dragStart, startPos
   local dragSpeed = 0.25

   local function updateInput(input)
       local delta = input.Position - dragStart
       local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                startPos.Y.Scale, startPos.Y.Offset + delta.Y)
       TweenService:Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
   end

   frame.InputBegan:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseButton1 or 
          input.UserInputType == Enum.UserInputType.Touch then
           dragToggle = true
           dragStart = input.Position
           startPos = frame.Position
           input.Changed:Connect(function()
               if input.UserInputState == Enum.UserInputState.End then
                   dragToggle = false
               end
           end)
       end
   end)

   frame.InputChanged:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseMovement or
          input.UserInputType == Enum.UserInputType.Touch then
           dragInput = input
       end
   end)

   UserInputService.InputChanged:Connect(function(input)
       if input == dragInput and dragToggle then
           updateInput(input)
       end
   end)
end

EnableDragging(MainFrame)
EnableDragging(FloatingButton)

local function applyTheme(themeName)
   local theme = Themes[themeName]
   effects.SunRays.Intensity = theme.SunraysIntensity
   effects.Bloom.Intensity = theme.BloomIntensity
   Lighting.Brightness = theme.Brightness
   Lighting.Ambient = theme.Ambient
   effects.Atmosphere.Color = theme.AtmosphereColor
end

ToggleButton.MouseButton1Click:Connect(function()
   enabled = not enabled
   ToggleButton.Text = enabled and "Disable RTX" or "Enable RTX"
   ToggleButton.BackgroundColor3 = enabled and Color3.fromRGB(200, 40, 40) or Color3.fromRGB(40, 120, 200)
   
   if enabled then
       applyTheme("Default")
   else
       for _, effect in pairs(effects) do
           effect.Enabled = false
       end
       Lighting.Brightness = 1
       Lighting.Ambient = Color3.fromRGB(127, 127, 127)
   end
end)

MinimizeButton.MouseButton1Click:Connect(function()
   MainFrame.Visible = false
   FloatingButton.Visible = true
end)

FloatingButton.MouseButton1Click:Connect(function()
   MainFrame.Visible = true
   FloatingButton.Visible = false
end)

RunService.Heartbeat:Connect(function()
   if enabled and tick() - lastUpdate >= updateInterval then
       for _, effect in pairs(effects) do
           effect.Enabled = true
       end
       lastUpdate = tick()
   end
end)

WelcomeGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
MainGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

task.wait(3)
TweenService:Create(WelcomeFrame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
TweenService:Create(WelcomeTitle, TweenInfo.new(1), {TextTransparency = 1}):Play()
task.wait(1)
WelcomeGui:Destroy()
