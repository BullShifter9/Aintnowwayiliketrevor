local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera

-- GUI
local ScreenGui = Instance.new("ScreenGui") 
ScreenGui.Name = "FlingGUI"
ScreenGui.Parent = game:GetService("CoreGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 200, 0, 100)
Frame.Position = UDim2.new(0.5, -100, 0.1, 0)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui
Frame.Active = true
Frame.Draggable = true

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Text = "Click Fling"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.Parent = Frame

local Toggle = Instance.new("TextButton")
Toggle.Size = UDim2.new(0.8, 0, 0, 40)
Toggle.Position = UDim2.new(0.1, 0, 0.5, -20)
Toggle.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.Text = "DISABLED"
Toggle.Font = Enum.Font.GothamBold
Toggle.TextSize = 14
Toggle.Parent = Frame

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 6)
Corner.Parent = Frame

local ButtonCorner = Instance.new("UICorner")
ButtonCorner.CornerRadius = UDim.new(0, 6)
ButtonCorner.Parent = Toggle

-- Dragging Functionality for Mobile
local dragging = false
local dragInput
local dragStart
local startPos

local function updateDrag(input)
   local delta = input.Position - dragStart
   Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Frame.InputBegan:Connect(function(input)
   if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
       dragging = true
       dragStart = input.Position
       startPos = Frame.Position
       
       input.Changed:Connect(function()
           if input.UserInputState == Enum.UserInputState.End then
               dragging = false
           end
       end)
   end
end)

Frame.InputChanged:Connect(function(input)
   if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
       dragInput = input
   end
end)

UserInputService.InputChanged:Connect(function(input)
   if dragging and (input == dragInput) then
       updateDrag(input)
   end
end)

-- Fling Functionality
local Enabled = false
local Flinging = false
local FlingForce = 1000000

local function setNetworkOwner(part)
   if part:CanSetNetworkOwnership() then
       part:SetNetworkOwner(nil)
       task.wait()
       part:SetNetworkOwner(LocalPlayer)
   end
end

local function flingPlayer(target)
   if not Enabled or Flinging or not target.Character then return end
   
   local character = LocalPlayer.Character
   if not character then return end
   
   local humanoid = character:FindFirstChild("Humanoid")
   local rootPart = character:FindFirstChild("HumanoidRootPart")
   if not humanoid or not rootPart then return end
   
   Flinging = true
   
   -- Store original properties
   local oldPosition = rootPart.CFrame
   local oldVelocity = rootPart.Velocity
   local oldCollisionGroup = rootPart.CollisionGroupId
   
   -- Setup for fling
   setNetworkOwner(rootPart)
   rootPart.CollisionGroupId = 0
   humanoid:ChangeState(Enum.HumanoidStateType.Physics)
   
   -- Teleport and fling
   rootPart.CFrame = target.Character.HumanoidRootPart.CFrame
   rootPart.Velocity = Vector3.new(FlingForce, FlingForce, FlingForce)
   rootPart.RotVelocity = Vector3.new(FlingForce, FlingForce, FlingForce)
   
   -- Wait and reset
   task.wait(0.5)
   humanoid:ChangeState(Enum.HumanoidStateType.Running)
   rootPart.Velocity = oldVelocity
   rootPart.RotVelocity = Vector3.new(0, 0, 0)
   rootPart.CFrame = oldPosition
   rootPart.CollisionGroupId = oldCollisionGroup
   
   Flinging = false
end

Toggle.MouseButton1Click:Connect(function()
   Enabled = not Enabled
   Toggle.BackgroundColor3 = Enabled and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
   Toggle.Text = Enabled and "ENABLED" or "DISABLED"
end)

-- Click Detection
Mouse.Button1Down:Connect(function()
   if not Enabled then return end
   
   local target = Mouse.Target
   if not target then return end
   
   local player = Players:GetPlayerFromCharacter(target.Parent)
   if player and player ~= LocalPlayer then
       flingPlayer(player)
   end
end)

-- Touch Detection for Mobile
UserInputService.TouchTap:Connect(function(touches)
   if not Enabled then return end
   
   local touch = touches[1]
   local ray = Camera:ScreenPointToRay(touch.Position.X, touch.Position.Y)
   local raycastResult = workspace:Raycast(ray.Origin, ray.Direction * 1000)
   
   if raycastResult and raycastResult.Instance then
       local player = Players:GetPlayerFromCharacter(raycastResult.Instance.Parent)
       if player and player ~= LocalPlayer then
           flingPlayer(player)
       end
   end
end)
