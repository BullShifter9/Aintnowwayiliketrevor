local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- Variables
local isSilentAimEnabled = false
local isESPEnabled = false
local isMinimized = false
local LocalPlayer = Players.LocalPlayer

-- ESP/Chams functions
local function createChams(player)
    if not player.Character then return end
    
    for _, part in pairs(player.Character:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            local highlight = Instance.new("Highlight")
            highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red for murderer
            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.Parent = part
        end
    end
end

local function removeChams(player)
    if not player.Character then return end
    
    for _, part in pairs(player.Character:GetDescendants()) do
        if part:IsA("Highlight") then
            part:Destroy()
        end
    end
end

-- Prediction and targeting
local function getPredictedPosition(player)
    if not player or not player.Character then return nil end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if not humanoid or not rootPart then return nil end
    
    local velocity = rootPart.AssemblyLinearVelocity
    local position = rootPart.Position
    local moveDirection = humanoid.MoveDirection
    
    -- Calculate prediction
    local prediction = position +
        (velocity * 0.15) +
        (moveDirection * humanoid.WalkSpeed * 0.12) +
        Vector3.new(0, velocity.Y * 0.1, 0)
    
    -- Network lag compensation
    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()
    prediction = prediction + (velocity * (ping/1000 * 0.1))
    
    return prediction
end

local function getMurderer()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character then
            local knife = player.Character:FindFirstChild("Knife") or 
                         (player.Backpack and player.Backpack:FindFirstChild("Knife"))
            if knife then 
                if isESPEnabled then
                    createChams(player)
                end
                return player 
            end
        end
    end
    return nil
end

-- Remote event handling
local function fireGun(targetPosition)
    local args = {
        [1] = targetPosition
    }
    
    local gunRemote = game:GetService("ReplicatedStorage"):FindFirstChild("Gun") -- Adjust name based on game
    if gunRemote then
        gunRemote:FireServer(unpack(args))
    end
end

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MM2Helper"
if syn then syn.protect_gui(ScreenGui) end
ScreenGui.Parent = game:GetService("CoreGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 200, 0, 150)
MainFrame.Position = UDim2.new(0.8, 0, 0.5, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 8)
Corner.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 8)
TitleCorner.Parent = TitleBar

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(0.7, 0, 1, 0)
Title.Position = UDim2.new(0.05, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "MM2 Helper"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 14
Title.Font = Enum.Font.GothamBold
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -30, 0, 0)
MinimizeButton.BackgroundTransparency = 1
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 20
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Parent = TitleBar

-- Buttons
local function createButton(text, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.9, 0, 0, 30)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.Font = Enum.Font.GothamBold
    button.Parent = MainFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button
    
    return button
end

local SilentAimButton = createButton("Silent Aim: OFF", UDim2.new(0.05, 0, 0.3, 0))
local ESPButton = createButton("Murderer ESP: OFF", UDim2.new(0.05, 0, 0.55, 0))

-- Button Events
SilentAimButton.MouseButton1Click:Connect(function()
    isSilentAimEnabled = not isSilentAimEnabled
    SilentAimButton.Text = "Silent Aim: " .. (isSilentAimEnabled and "ON" or "OFF")
    SilentAimButton.BackgroundColor3 = isSilentAimEnabled and 
        Color3.fromRGB(0, 170, 127) or 
        Color3.fromRGB(45, 45, 45)
end)

ESPButton.MouseButton1Click:Connect(function()
    isESPEnabled = not isESPEnabled
    ESPButton.Text = "Murderer ESP: " .. (isESPEnabled and "ON" or "OFF")
    ESPButton.BackgroundColor3 = isESPEnabled and 
        Color3.fromRGB(0, 170, 127) or 
        Color3.fromRGB(45, 45, 45)
        
    -- Update ESP
    local murderer = getMurderer()
    if murderer then
        if isESPEnabled then
            createChams(murderer)
        else
            removeChams(murderer)
        end
    end
end)

MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    TweenService:Create(MainFrame, TweenInfo.new(0.3), {
        Size = isMinimized and UDim2.new(0, 200, 0, 30) or UDim2.new(0, 200, 0, 150)
    }):Play()
end)

-- Dragging functionality
local dragging = false
local dragStart = nil
local startPos = nil

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or
                    input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- Silent Aim Implementation
UserInputService.InputBegan:Connect(function(input)
    if not isSilentAimEnabled then return end
    
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        local murderer = getMurderer()
        if murderer then
            local targetPos = getPredictedPosition(murderer)
            if targetPos then
                fireGun(targetPos)
            end
        end
    end
end)

-- ESP Update Loop
RunService.Heartbeat:Connect(function()
    if isESPEnabled then
        local murderer = getMurderer()
        if murderer then
            createChams(murderer)
        end
    end
end)
