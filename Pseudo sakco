local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local roles = {}
local Murder, Sheriff, Hero
local GunDrop
local ESPEnabled = false
local Switch = false
local AutoCoin = false 
local AutoCoinOperator = false
local SpeedGlitchEnabled = false
local SpeedValue = 100

local gui = Instance.new("ScreenGui")
gui.Name = "MM2Helper"
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui

local part = Instance.new("Part")
part.Name = "AutoCoinPart"
part.Color = Color3.new(0, 0, 0)
part.Material = Enum.Material.Plastic
part.Transparency = 1
part.Position = Vector3.new(0, 10000, 0)
part.Size = Vector3.new(4, 0.5, 4)
part.CastShadow = false
part.Anchored = true
part.CanCollide = false
part.Parent = workspace

local touchInterest = Instance.new("TouchTransmitter")
touchInterest.Parent = part

local AimGui = Instance.new("ScreenGui")
local AimButton = Instance.new("ImageButton")

AimGui.Parent = game.CoreGui

AimButton.Parent = AimGui
AimButton.BackgroundColor3 = Color3.new(0,0,0)
AimButton.BackgroundTransparency = 0.5
AimButton.BorderColor3 = Color3.new(1,1,1)
AimButton.BorderSizePixel = 1
AimButton.Position = UDim2.new(0.897,0,0.3)
AimButton.Size = UDim2.new(0.08,0,0.15)
AimButton.Image = "http://www.roblox.com/asset/?id=12774311691"
AimButton.Draggable = false
AimButton.Visible = false

local isDragging = false
local dragStart = nil
local startPos = nil

AimButton.InputBegan:Connect(function(input)
   if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
       isDragging = true
       dragStart = input.Position
       startPos = AimButton.Position
   end
end)

AimButton.InputEnded:Connect(function(input)
   if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
       isDragging = false
   end
end)

UserInputService.InputChanged:Connect(function(input)
   if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
       local delta = input.Position - dragStart
       local newPos = UDim2.new(
           startPos.X.Scale,
           startPos.X.Offset + delta.X,
           startPos.Y.Scale,
           startPos.Y.Offset + delta.Y
       )
       local smoothness = 0.5
       AimButton.Position = AimButton.Position:Lerp(newPos, smoothness)
   end
end)

local function IsAlive(Player)
   for i, v in pairs(roles) do
       if Player.Name == i then
           return not (v.Killed or v.Dead)
       end
   end
   return false
end

local espCache = {}

local function MakeESP()
   if not ESPEnabled then
       for _, esp in pairs(espCache) do
           if esp.highlight then esp.highlight:Destroy() end
           if esp.bbgui then esp.bbgui:Destroy() end
       end
       espCache = {}
       return
   end

   for _, player in pairs(Players:GetChildren()) do
       if player ~= Players.LocalPlayer and player.Character then
           if espCache[player.Name] and not (player.Name == Sheriff or player.Name == Murder or player.Name == Hero) then
               if espCache[player.Name].highlight then
                   espCache[player.Name].highlight:Destroy()
               end
               if espCache[player.Name].bbgui then
                   espCache[player.Name].bbgui:Destroy()
               end
               espCache[player.Name] = nil
               continue
           end

           local role
           if player.Name == Sheriff and IsAlive(player) then
               role = {name = "Sheriff", color = Color3.new(0,0,1)}
           elseif player.Name == Murder and IsAlive(player) then
               role = {name = "Murder", color = Color3.new(1,0,0)}  
           elseif player.Name == Hero and IsAlive(player) then
               role = {name = "Hero", color = Color3.new(1,1,0)}
           end

           if role then
               if not espCache[player.Name] then
                   local highlight = Instance.new("Highlight")
                   highlight.FillColor = role.color
                   highlight.OutlineColor = role.color
                   highlight.FillTransparency = 0.5
                   highlight.OutlineTransparency = 0
                   highlight.Parent = player.Character

                   local bbgui = Instance.new("BillboardGui")
                   bbgui.AlwaysOnTop = true
                   bbgui.Size = UDim2.new(0,200,0,50)
                   bbgui.StudsOffset = Vector3.new(0,3,0)
                   
                   local name = Instance.new("TextLabel")
                   name.BackgroundTransparency = 1
                   name.Size = UDim2.new(1,0,1,0)
                   name.Text = player.Name
                   name.TextColor3 = role.color
                   name.TextSize = 14
                   name.Font = Enum.Font.GothamBold
                   name.Parent = bbgui
                   
                   bbgui.Parent = player.Character.Head
                   
                   espCache[player.Name] = {
                       highlight = highlight,
                       bbgui = bbgui
                   }
               end
           end
       end
   end
end

local function OptimizedCoinCollection()
   if not AutoCoin or AutoCoinOperator then return end
   
   AutoCoinOperator = true
   local character = Players.LocalPlayer.Character
   if not character or not character:FindFirstChild("HumanoidRootPart") then 
       AutoCoinOperator = false
       return 
   end

   local function isValidCoin(coin)
       return (coin:IsA("Part") or coin:IsA("MeshPart")) and 
              (coin.Name == "Coin_Server" or coin.Name == "SnowToken") and
              coin:FindFirstChild("CoinCollectible")
   end

   local coins = {}
   for _, coin in ipairs(workspace:GetDescendants()) do
       if isValidCoin(coin) then
           table.insert(coins, coin)
       end
   end

   if #coins == 0 then
       AutoCoinOperator = false
       return
   end

   table.sort(coins, function(a, b)
       return (character.HumanoidRootPart.Position - a.Position).magnitude < 
              (character.HumanoidRootPart.Position - b.Position).magnitude
   end)

   workspace.AutoCoinPart.CanCollide = false
   workspace.AutoCoinPart.Anchored = true

   for _, coin in ipairs(coins) do
       if not AutoCoin then break end
       
       local distance = (character.HumanoidRootPart.Position - coin.Position).magnitude
       local tweenTime = math.min(distance / 50, 1)
       
       local tween = TweenService:Create(
           workspace.AutoCoinPart,
           TweenInfo.new(tweenTime, Enum.EasingStyle.Linear),
           {CFrame = coin.CFrame + Vector3.new(0, 0.5, 0)}
       )
       
       tween:Play()
       task.wait(tweenTime + 0.1)
       
       if coin and coin.Parent then
           firetouchinterest(workspace.AutoCoinPart, coin, 0)
           task.wait()
           firetouchinterest(workspace.AutoCoinPart, coin, 1)
       end
   end
   
   AutoCoinOperator = false
end

local function CreateSpeedGlitchUI(scrollFrame)
   local speedContainer = Instance.new("Frame")
   speedContainer.Size = UDim2.new(1, -10, 0, 90)
   speedContainer.Position = UDim2.new(0, 5, 0, 210)
   speedContainer.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
   speedContainer.Parent = scrollFrame

   local corner = Instance.new("UICorner")
   corner.CornerRadius = UDim.new(0, 8)
   corner.Parent = speedContainer

   local speedButton = Instance.new("TextButton")
   speedButton.Size = UDim2.new(1, 0, 0, 40)
   speedButton.Position = UDim2.new(0, 0, 0, 0)
   speedButton.BackgroundTransparency = 1
   speedButton.Text = "Speed Glitch: OFF"
   speedButton.TextColor3 = Color3.new(1, 1, 1)
   speedButton.TextSize = 14
   speedButton.Font = Enum.Font.GothamSemibold
   speedButton.Parent = speedContainer

   local speedSlider = Instance.new("Frame")
   speedSlider.Size = UDim2.new(0.9, 0, 0, 6)
   speedSlider.Position = UDim2.new(0.05, 0, 0, 60)
   speedSlider.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
   speedSlider.Parent = speedContainer

   local sliderCorner = Instance.new("UICorner")
   sliderCorner.CornerRadius = UDim.new(1, 0)
   sliderCorner.Parent = speedSlider

   local sliderButton = Instance.new("TextButton")
   sliderButton.Size = UDim2.new(0, 16, 0, 16)
   sliderButton.Position = UDim2.new(0, -8, 0.5, -8)
   sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
   sliderButton.Text = ""
   sliderButton.Parent = speedSlider

   local sliderButtonCorner = Instance.new("UICorner")
   sliderButtonCorner.CornerRadius = UDim.new(1, 0)
   sliderButtonCorner.Parent = sliderButton

   local speedLabel = Instance.new("TextLabel")
   speedLabel.Size = UDim2.new(1, 0, 0, 20)
   speedLabel.Position = UDim2.new(0, 0, 0, 70)
   speedLabel.BackgroundTransparency = 1
   speedLabel.Text = "Speed: " .. SpeedValue
   speedLabel.TextColor3 = Color3.new(1, 1, 1)
   speedLabel.TextSize = 12
   speedLabel.Font = Enum.Font.GothamSemibold
   speedLabel.Parent = speedContainer

   local function updateSlider(inputPosition)
       local sliderPosition = math.clamp(
           (inputPosition.X - speedSlider.AbsolutePosition.X) / speedSlider.AbsoluteSize.X,
           0,
           1
       )
       sliderButton.Position = UDim2.new(sliderPosition, -8, 0.5, -8)
       SpeedValue = math.floor(sliderPosition * 9900 + 100)
       speedLabel.Text = "Speed: " .. SpeedValue
   end

   sliderButton.InputBegan:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseButton1 or
          input.UserInputType == Enum.UserInputType.Touch then
           dragConnection = UserInputService.InputChanged:Connect(function(moveInput)
               if moveInput.UserInputType == Enum.UserInputType.MouseMovement or
                  moveInput.UserInputType == Enum.UserInputType.Touch then
                   updateSlider(moveInput.Position)
               end
           end)
       end
   end)

   UserInputService.InputEnded:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseButton1 or
          input.UserInputType == Enum.UserInputType.Touch then
           if dragConnection then
               dragConnection:Disconnect()
               dragConnection = nil
           end
       end
   end)

   speedSlider.InputBegan:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.Touch then
           updateSlider(input.Position)
       end
   end)

   speedSlider.InputChanged:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.Touch then
           updateSlider(input.Position)
       end
   end)

   speedButton.MouseButton1Click:Connect(function()
       SpeedGlitchEnabled = not SpeedGlitchEnabled
       speedButton.Text = SpeedGlitchEnabled and "Speed Glitch: ON" or "Speed Glitch: OFF"
       speedContainer.BackgroundColor3 = SpeedGlitchEnabled and Color3.fromRGB(65, 175, 95) or Color3.fromRGB(60, 60, 60)
   end)

   return speedContainer
end

local function HandleSpeedGlitch()
   local character = Players.LocalPlayer.Character
   if not character then return end
   
   local humanoid = character:FindFirstChild("Humanoid")
   if not humanoid then return end

   local isJumping = false
   local isRunning = false

   humanoid.StateChanged:Connect(function(_, new)
       isJumping = new == Enum.HumanoidStateType.Jumping
   end)

   RunService.Heartbeat:Connect(function()
       isRunning = humanoid.MoveDirection.Magnitude > 0
       
       if SpeedGlitchEnabled and isJumping and isRunning then
           local moveDirection = humanoid.MoveDirection * SpeedValue
           character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + moveDirection * RunService.Heartbeat:Wait()
       end
   end)
end

local function CreateToggleButton()
   local toggleGui = Instance.new("ScreenGui")
   toggleGui.Name = "MainToggle"
   toggleGui.Parent = game.CoreGui

   local toggleButton = Instance.new("TextButton")
   toggleButton.Size = UDim2.new(0, 40, 0, 40)
   toggleButton.Position = UDim2.new(0, 10, 0.5, -20)
   toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
   toggleButton.Text = "M"
   toggleButton.TextColor3 = Color3.new(1, 1, 1)
   toggleButton.TextSize = 18
   toggleButton.Font = Enum.Font.GothamBold
   toggleButton.Parent = toggleGui

   local corner = Instance.new("UICorner")
   corner.CornerRadius = UDim.new(0, 8)
   corner.Parent = toggleButton

   local function MakeDraggable(gui)
   local dragging
   local dragInput
   local dragStart
   local startPos

   local function update(input)
       local delta = input.Position - dragStart
       local newPosition = UDim2.new(
           startPos.X.Scale,
           startPos.X.Offset + delta.X,
           startPos.Y.Scale,
           startPos.Y.Offset + delta.Y
       )
       game:GetService("TweenService"):Create(gui, TweenInfo.new(0.1), {Position = newPosition}):Play()
   end

   gui.InputBegan:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
           dragging = true
           dragStart = input.Position
           startPos = gui.Position
       end
   end)

   gui.InputEnded:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
           dragging = false
       end
   end)

   UserInputService.InputChanged:Connect(function(input)
       if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
           update(input)
       end
   end)
end

   MakeDraggable(toggleButton)

   return toggleButton
end

local function createButton(text, yPos)
   local button = Instance.new("TextButton")
   button.Size = UDim2.new(1, -10, 0, 40)
   button.Position = UDim2.new(0, 5, 0, yPos)
   button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
   button.TextColor3 = Color3.new(1, 1, 1)
   button.Text = text
   button.TextSize = 14
   button.Font = Enum.Font.GothamSemibold
   button.Parent = scrollFrame
   button.AutoButtonColor = false
   
   button:SetAttribute("Toggled", false)

   local corner = Instance.new("UICorner")
   corner.CornerRadius = UDim.new(0, 8)
   corner.Parent = button

   button.MouseEnter:Connect(function()
       if not button:GetAttribute("Toggled") then
           button.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
       end
   end)

   button.MouseLeave:Connect(function()
       if not button:GetAttribute("Toggled") then
           button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
       end
   end)

   return button
end

local function CreateMainGUI()
   local mainFrame = Instance.new("Frame")
   mainFrame.Size = UDim2.new(0, 240, 0, 330)
   mainFrame.Position = UDim2.new(0.5, -120, 0, 10)
   mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
   mainFrame.BorderSizePixel = 0
   mainFrame.Parent = gui
   mainFrame.Visible = false

   local mainCorner = Instance.new("UICorner")
   mainCorner.CornerRadius = UDim.new(0, 10)
   mainCorner.Parent = mainFrame

   local titleBar = Instance.new("Frame")
   titleBar.Size = UDim2.new(1, 0, 0, 30)
   titleBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
   titleBar.BorderSizePixel = 0
   titleBar.Parent = mainFrame

   local titleCorner = Instance.new("UICorner")
   titleCorner.CornerRadius = UDim.new(0, 10)
   titleCorner.Parent = titleBar

   local titleText = Instance.new("TextLabel")
   titleText.Size = UDim2.new(1, -40, 1, 0)
   titleText.Position = UDim2.new(0, 10, 0, 0)
   titleText.BackgroundTransparency = 1
   titleText.Text = "MM2 Helper"
   titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
   titleText.TextSize = 16
   titleText.Font = Enum.Font.GothamBold
   titleText.TextXAlignment = Enum.TextXAlignment.Left
   titleText.Parent = titleBar

   local scrollFrame = Instance.new("ScrollingFrame")
   scrollFrame.Size = UDim2.new(1, -20, 1, -40)
   scrollFrame.Position = UDim2.new(0, 10, 0, 35)
   scrollFrame.BackgroundTransparency = 1
   scrollFrame.BorderSizePixel = 0
   scrollFrame.ScrollBarThickness = 4
   scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
   scrollFrame.ScrollBarImageTransparency = 0.5
   scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 320)
   scrollFrame.Parent = mainFrame

   local espButton = createButton("ESP OFF", 10)
   local coinButton = createButton("Auto Get Coin", 60)
   local gunButton = createButton("Get Gun Drop", 110)
   local shootButton = createButton("Shoot Murderer", 160)

   local toggleButton = Instance.new("TextButton")
   toggleButton.Size = UDim2.new(0, 30, 0, 30)
   toggleButton.Position = UDim2.new(1, -35, 0, 0)
   toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
   toggleButton.TextColor3 = Color3.new(1, 1, 1)
   toggleButton.Text = ">"
   toggleButton.TextSize = 18
   toggleButton.Font = Enum.Font.GothamBold
   toggleButton.Parent = titleBar
   toggleButton.AutoButtonColor = false

   local toggleCorner = Instance.new("UICorner")
   toggleCorner.CornerRadius = UDim.new(0, 6)
   toggleCorner.Parent = toggleButton

   MakeDraggable(mainFrame)

   return {
       mainFrame = mainFrame,
       espButton = espButton,
       coinButton = coinButton,  
       gunButton = gunButton,
       shootButton = shootButton,
       scrollFrame = scrollFrame
   }
end

local mainToggle = CreateToggleButton()
local mainGui = CreateMainGUI()
local speedContainer = CreateSpeedGlitchUI(mainGui.scrollFrame)

mainToggle.MouseButton1Click:Connect(function()
   mainGui.mainFrame.Visible = not mainGui.mainFrame.Visible
end)

mainGui.espButton.MouseButton1Click:Connect(function()
   ESPEnabled = not ESPEnabled
   mainGui.espButton.Text = ESPEnabled and "ESP ON" or "ESP OFF"
   mainGui.espButton.BackgroundColor3 = ESPEnabled and Color3.fromRGB(65, 175, 95) or Color3.fromRGB(60, 60, 60)
   
   if not ESPEnabled then
       for _, esp in pairs(espCache) do
           if esp.highlight then esp.highlight:Destroy() end
           if esp.bbgui then esp.bbgui:Destroy() end
       end
       espCache = {}
   end
end)

mainGui.coinButton.MouseButton1Click:Connect(function()
   Switch = not Switch
   AutoCoin = Switch
   mainGui.coinButton.Text = Switch and "UnAuto Get Coin" or "Auto Get Coin"
   mainGui.coinButton.BackgroundColor3 = Switch and Color3.fromRGB(65, 175, 95) or Color3.fromRGB(60, 60, 60)
   
   if Switch then
       task.spawn(OptimizedCoinCollection)
   end
end)

mainGui.gunButton.MouseButton1Click:Connect(function()
   local isActive = not (mainGui.gunButton.BackgroundColor3 == Color3.fromRGB(65, 175, 95))
   mainGui.gunButton.BackgroundColor3 = isActive and Color3.fromRGB(65, 175, 95) or Color3.fromRGB(60, 60, 60)

   if not GunDrop then
       game:GetService("StarterGui"):SetCore("SendNotification", {
           Title = "Script",
           Text = "Gun Not Found",
           Duration = 2.3,
       })
       return
   end
   
   if Murder and Players[Murder].Character then
       local murdererDist = (Players[Murder].Character.HumanoidRootPart.Position - GunDrop.Position).Magnitude
       if murdererDist < 15 then
           game:GetService("StarterGui"):SetCore("SendNotification", {
               Title = "Script", 
               Text = "Murderer too close to gun",
               Duration = 2.3,
           })
           return
       end
   end

   local char = Players.LocalPlayer.Character
   local hrp = char:FindFirstChild("HumanoidRootPart")
   if hrp then
       local originalCFrame = hrp.CFrame
       hrp.CFrame = GunDrop.CFrame * CFrame.new(0,2,0)
       
       if GunDrop:FindFirstChild("ProximityPrompt") then
           GunDrop.ProximityPrompt.RequiresLineOfSight = false
           GunDrop.ProximityPrompt.MaxActivationDistance = math.huge
           GunDrop.ProximityPrompt:InputHoldBegin()
       end
       
       wait(0.15)
       hrp.CFrame = originalCFrame
   end
end)

mainGui.shootButton.MouseButton1Click:Connect(function()
   AimButton.Visible = not AimButton.Visible
   mainGui.shootButton.BackgroundColor3 = AimButton.Visible and Color3.fromRGB(65, 175, 95) or Color3.fromRGB(60, 60, 60)
end)

task.spawn(function()
   while task.wait(0.5) do
       if AutoCoin and not AutoCoinOperator then
           OptimizedCoinCollection()
       end
   end
end)

local lastUpdate = 0
RunService.RenderStepped:Connect(function()
   local now = tick()
   if now - lastUpdate < 0.1 then return end
   lastUpdate = now
   
   roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
   for i, v in pairs(roles) do
       if v.Role == "Murderer" then Murder = i
       elseif v.Role == "Sheriff" then Sheriff = i
       elseif v.Role == "Hero" then Hero = i end
   end

   if ESPEnabled then pcall(MakeESP) end
end)

workspace.DescendantAdded:Connect(function(part)
   if part.Name == "GunDrop" then GunDrop = part end
end)

workspace.DescendantRemoving:Connect(function(part)
   if part.Name == "GunDrop" then GunDrop = nil end
end)

Players.LocalPlayer.CharacterAdded:Connect(function()
   if mainGui and mainGui.mainFrame then
       mainGui.mainFrame.Visible = true
   end
   HandleSpeedGlitch()
end)
